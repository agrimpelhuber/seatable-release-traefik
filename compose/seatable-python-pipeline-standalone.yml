services:
  # seatable-python-pipeline
  # Optional labels for lets encrypt staging or custom certificates
  # caddy.tls.ca: https://acme-staging-v02.api.letsencrypt.org/directory
  # caddy.tls: "/data/certs/server-public-cert.pem /data/certs/server-private-key.pem"
  seatable-python-scheduler:
    image: seatable/seatable-python-scheduler:dev
    restart: unless-stopped
    container_name: seatable-python-scheduler
    environment:
      - DB_HOST=${PYTHON_SCHEDULER_MYSQL_HOST}
      - DB_ROOT_PASSWD=${PYTHON_SCHEDULER_MYSQL_ROOT_PASSWORD}
      - TIME_ZONE=${TIME_ZONE}
      - PYTHON_SCHEDULER_AUTH_TOKEN=${PYTHON_SCHEDULER_AUTH_TOKEN}
      - SEATABLE_SERVER_URL=${SEATABLE_SERVER_URL}
      - PYTHON_STARTER_URL=${PYTHON_STARTER_URL:-http://seatable-python-starter:8080}
      - PYTHON_SCHEDULER_LOG_LEVEL=${PYTHON_SCHEDULER_LOG_LEVEL:-WARNING}
      - DELETE_LOG_DAYS=${DELETE_LOG_DAYS:-30}
    labels:
      caddy: ${PYTHON_SCHEDULER_URL}
      caddy.reverse_proxy: "{{upstreams 80}}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - frontend-net
      - scheduler-net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pgrep -f 'python3 scheduler.py' && pgrep -f 'python3 flask_server.py'",
        ]
      interval: 20s
      retries: 3
      start_period: 20s
      timeout: 10s

  seatable-python-starter:
    image: seatable/seatable-python-starter:dev
    restart: unless-stopped
    container_name: seatable-python-starter
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${SEATABLE_TRANSFER_DIRECTORY_PATH:-/tmp}:${SEATABLE_TRANSFER_DIRECTORY_PATH:-/tmp}"
    environment:
      - PYTHON_SCHEDULER_URL=${PYTHON_SCHEDULER_URL}
      - PYTHON_TRANSFER_DIRECTORY=${PYTHON_TRANSFER_DIRECTORY_PATH:-/tmp}
      - PYTHON_RUNNER_IMAGE=${PYTHON_RUNNER_IMAGE:-seatable/seatable-python-runner:dev}
      - PYTHON_STARTER_LOG_LEVEL=DEBUG
    networks:
      - scheduler-net

  seatable-python-runner:
    image: ${PYTHON_RUNNER_IMAGE:-seatable/seatable-python-runner:dev}
    restart: unless-stopped
    container_name: seatable-python-runner
    networks:
      - scheduler-net

  python-db:
    image: mariadb:10.11
    restart: unless-stopped
    container_name: python-db
    environment:
      - TZ=Europe/Berlin
      - MYSQL_ROOT_PASSWORD=${PYTHON_SCHEDULER_MYSQL_ROOT_PASSWORD}
      - MYSQL_LOG_CONSOLE=true
      - MARIADB_MYSQL_LOCALHOST_USER=1
      - MARIADB_MYSQL_LOCALHOST_GRANTS=USAGE
    volumes:
      - /opt/scheduler-mysql:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
      interval: 10s
      retries: 3
      timeout: 5s
    networks:
      - scheduler-net

networks:
  scheduler-net:
    name: scheduler-net
